### YamlMime:ManagedReference
items:
- uid: wan24.Data.CsvTable
  commentId: T:wan24.Data.CsvTable
  id: CsvTable
  parent: wan24.Data
  children:
  - wan24.Data.CsvTable.#ctor(System.Nullable{System.Boolean},System.Char,System.Nullable{System.Char},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  - wan24.Data.CsvTable.AddColumn(System.String,System.Int32,System.Func{System.Int32,System.String})
  - wan24.Data.CsvTable.AddObjects(System.Object[])
  - wan24.Data.CsvTable.AddObjects``1(System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping},``0[])
  - wan24.Data.CsvTable.AddObjects``1(``0[])
  - wan24.Data.CsvTable.AddRow(System.Collections.Generic.IEnumerable{System.String})
  - wan24.Data.CsvTable.AsDictionaries
  - wan24.Data.CsvTable.AsDictionary(System.Int32)
  - wan24.Data.CsvTable.AsObject(System.Int32)
  - wan24.Data.CsvTable.AsObject``1(System.Int32,System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping})
  - wan24.Data.CsvTable.AsObject``1(System.Int32,``0,System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping})
  - wan24.Data.CsvTable.AsObjects``1(System.Int32,System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping})
  - wan24.Data.CsvTable.Clear(System.Boolean)
  - wan24.Data.CsvTable.Clone
  - wan24.Data.CsvTable.CountColumns
  - wan24.Data.CsvTable.CountRows
  - wan24.Data.CsvTable.CreateHeaders
  - wan24.Data.CsvTable.CreateMapping
  - wan24.Data.CsvTable.FieldDelimiter
  - wan24.Data.CsvTable.GetEnumerator
  - wan24.Data.CsvTable.HasHeader
  - wan24.Data.CsvTable.Header
  - wan24.Data.CsvTable.Item(System.Int32)
  - wan24.Data.CsvTable.Item(System.Int32,System.String)
  - wan24.Data.CsvTable.Mapping
  - wan24.Data.CsvTable.MoveColumn(System.Int32,System.Int32,System.Boolean)
  - wan24.Data.CsvTable.Objects
  - wan24.Data.CsvTable.RemoveColumn(System.Int32)
  - wan24.Data.CsvTable.ReorderColumns(System.Int32[],System.Boolean)
  - wan24.Data.CsvTable.Rows
  - wan24.Data.CsvTable.StringDelimiter
  - wan24.Data.CsvTable.SwapColumn(System.Int32,System.Int32,System.Boolean)
  - wan24.Data.CsvTable.ToString(System.Nullable{System.Boolean},System.Nullable{System.Char},System.Nullable{System.Char})
  - wan24.Data.CsvTable.Validate
  langs:
  - csharp
  - vb
  name: CsvTable
  nameWithType: CsvTable
  fullName: wan24.Data.CsvTable
  type: Class
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Map.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: CsvTable
    path: ../CSV-Parser/CsvTable.Map.cs
    startLine: 7
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: CSV table
  example: []
  syntax:
    content: 'public class CsvTable : IEnumerable<string[]>, IEnumerable, ICloneable'
    content.vb: Public Class CsvTable Implements IEnumerable(Of String()), IEnumerable, ICloneable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{System.String[]}
  - System.Collections.IEnumerable
  - System.ICloneable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: wan24.Data.CsvTable.CreateHeaders
  commentId: M:wan24.Data.CsvTable.CreateHeaders
  id: CreateHeaders
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: CreateHeaders()
  nameWithType: CsvTable.CreateHeaders()
  fullName: wan24.Data.CsvTable.CreateHeaders()
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Common.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: CreateHeaders
    path: ../CSV-Parser/CsvTable.Common.cs
    startLine: 13
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Create column headers (0..n)
  example: []
  syntax:
    content: public CsvTable CreateHeaders()
    return:
      type: wan24.Data.CsvTable
      description: This
    content.vb: Public Function CreateHeaders() As CsvTable
  overload: wan24.Data.CsvTable.CreateHeaders*
- uid: wan24.Data.CsvTable.AddColumn(System.String,System.Int32,System.Func{System.Int32,System.String})
  commentId: M:wan24.Data.CsvTable.AddColumn(System.String,System.Int32,System.Func{System.Int32,System.String})
  id: AddColumn(System.String,System.Int32,System.Func{System.Int32,System.String})
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: AddColumn(string, int, Func<int, string>)
  nameWithType: CsvTable.AddColumn(string, int, Func<int, string>)
  fullName: wan24.Data.CsvTable.AddColumn(string, int, System.Func<int, string>)
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Common.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: AddColumn
    path: ../CSV-Parser/CsvTable.Common.cs
    startLine: 27
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Add a column
  example: []
  syntax:
    content: public CsvTable AddColumn(string header, int index = -1, Func<int, string> valueFactory = null)
    parameters:
    - id: header
      type: System.String
      description: Header
    - id: index
      type: System.Int32
      description: Index
    - id: valueFactory
      type: System.Func{System.Int32,System.String}
      description: Value factory
    return:
      type: wan24.Data.CsvTable
      description: This
    content.vb: Public Function AddColumn(header As String, index As Integer = -1, valueFactory As Func(Of Integer, String) = Nothing) As CsvTable
  overload: wan24.Data.CsvTable.AddColumn*
  nameWithType.vb: CsvTable.AddColumn(String, Integer, Func(Of Integer, String))
  fullName.vb: wan24.Data.CsvTable.AddColumn(String, Integer, System.Func(Of Integer, String))
  name.vb: AddColumn(String, Integer, Func(Of Integer, String))
- uid: wan24.Data.CsvTable.RemoveColumn(System.Int32)
  commentId: M:wan24.Data.CsvTable.RemoveColumn(System.Int32)
  id: RemoveColumn(System.Int32)
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: RemoveColumn(int)
  nameWithType: CsvTable.RemoveColumn(int)
  fullName: wan24.Data.CsvTable.RemoveColumn(int)
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Common.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: RemoveColumn
    path: ../CSV-Parser/CsvTable.Common.cs
    startLine: 56
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Remove a column
  example: []
  syntax:
    content: public CsvTable RemoveColumn(int index)
    parameters:
    - id: index
      type: System.Int32
      description: Index
    return:
      type: wan24.Data.CsvTable
      description: This
    content.vb: Public Function RemoveColumn(index As Integer) As CsvTable
  overload: wan24.Data.CsvTable.RemoveColumn*
  nameWithType.vb: CsvTable.RemoveColumn(Integer)
  fullName.vb: wan24.Data.CsvTable.RemoveColumn(Integer)
  name.vb: RemoveColumn(Integer)
- uid: wan24.Data.CsvTable.MoveColumn(System.Int32,System.Int32,System.Boolean)
  commentId: M:wan24.Data.CsvTable.MoveColumn(System.Int32,System.Int32,System.Boolean)
  id: MoveColumn(System.Int32,System.Int32,System.Boolean)
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: MoveColumn(int, int, bool)
  nameWithType: CsvTable.MoveColumn(int, int, bool)
  fullName: wan24.Data.CsvTable.MoveColumn(int, int, bool)
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Common.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: MoveColumn
    path: ../CSV-Parser/CsvTable.Common.cs
    startLine: 79
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Move a column
  example: []
  syntax:
    content: public CsvTable MoveColumn(int currentIndex, int newIndex, bool updateMapping = true)
    parameters:
    - id: currentIndex
      type: System.Int32
      description: Current index
    - id: newIndex
      type: System.Int32
      description: New index
    - id: updateMapping
      type: System.Boolean
      description: Update the mapping?
    return:
      type: wan24.Data.CsvTable
      description: This
    content.vb: Public Function MoveColumn(currentIndex As Integer, newIndex As Integer, updateMapping As Boolean = True) As CsvTable
  overload: wan24.Data.CsvTable.MoveColumn*
  nameWithType.vb: CsvTable.MoveColumn(Integer, Integer, Boolean)
  fullName.vb: wan24.Data.CsvTable.MoveColumn(Integer, Integer, Boolean)
  name.vb: MoveColumn(Integer, Integer, Boolean)
- uid: wan24.Data.CsvTable.SwapColumn(System.Int32,System.Int32,System.Boolean)
  commentId: M:wan24.Data.CsvTable.SwapColumn(System.Int32,System.Int32,System.Boolean)
  id: SwapColumn(System.Int32,System.Int32,System.Boolean)
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: SwapColumn(int, int, bool)
  nameWithType: CsvTable.SwapColumn(int, int, bool)
  fullName: wan24.Data.CsvTable.SwapColumn(int, int, bool)
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Common.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: SwapColumn
    path: ../CSV-Parser/CsvTable.Common.cs
    startLine: 137
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Swap a column
  example: []
  syntax:
    content: public CsvTable SwapColumn(int a, int b, bool updateMapping = true)
    parameters:
    - id: a
      type: System.Int32
      description: Index A
    - id: b
      type: System.Int32
      description: Index B
    - id: updateMapping
      type: System.Boolean
      description: Update the mapping?
    return:
      type: wan24.Data.CsvTable
      description: This
    content.vb: Public Function SwapColumn(a As Integer, b As Integer, updateMapping As Boolean = True) As CsvTable
  overload: wan24.Data.CsvTable.SwapColumn*
  nameWithType.vb: CsvTable.SwapColumn(Integer, Integer, Boolean)
  fullName.vb: wan24.Data.CsvTable.SwapColumn(Integer, Integer, Boolean)
  name.vb: SwapColumn(Integer, Integer, Boolean)
- uid: wan24.Data.CsvTable.ReorderColumns(System.Int32[],System.Boolean)
  commentId: M:wan24.Data.CsvTable.ReorderColumns(System.Int32[],System.Boolean)
  id: ReorderColumns(System.Int32[],System.Boolean)
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: ReorderColumns(int[], bool)
  nameWithType: CsvTable.ReorderColumns(int[], bool)
  fullName: wan24.Data.CsvTable.ReorderColumns(int[], bool)
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Common.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: ReorderColumns
    path: ../CSV-Parser/CsvTable.Common.cs
    startLine: 169
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Re-order columns
  example: []
  syntax:
    content: public CsvTable ReorderColumns(int[] newIndexes, bool updateMapping = true)
    parameters:
    - id: newIndexes
      type: System.Int32[]
      description: New indexes
    - id: updateMapping
      type: System.Boolean
      description: Update the mapping?
    return:
      type: wan24.Data.CsvTable
      description: This
    content.vb: Public Function ReorderColumns(newIndexes As Integer(), updateMapping As Boolean = True) As CsvTable
  overload: wan24.Data.CsvTable.ReorderColumns*
  nameWithType.vb: CsvTable.ReorderColumns(Integer(), Boolean)
  fullName.vb: wan24.Data.CsvTable.ReorderColumns(Integer(), Boolean)
  name.vb: ReorderColumns(Integer(), Boolean)
- uid: wan24.Data.CsvTable.AddRow(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:wan24.Data.CsvTable.AddRow(System.Collections.Generic.IEnumerable{System.String})
  id: AddRow(System.Collections.Generic.IEnumerable{System.String})
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: AddRow(IEnumerable<string>)
  nameWithType: CsvTable.AddRow(IEnumerable<string>)
  fullName: wan24.Data.CsvTable.AddRow(System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Common.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: AddRow
    path: ../CSV-Parser/CsvTable.Common.cs
    startLine: 196
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Add a row
  example: []
  syntax:
    content: public CsvTable AddRow(IEnumerable<string> row)
    parameters:
    - id: row
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Row
    return:
      type: wan24.Data.CsvTable
      description: This
    content.vb: Public Function AddRow(row As IEnumerable(Of String)) As CsvTable
  overload: wan24.Data.CsvTable.AddRow*
  nameWithType.vb: CsvTable.AddRow(IEnumerable(Of String))
  fullName.vb: wan24.Data.CsvTable.AddRow(System.Collections.Generic.IEnumerable(Of String))
  name.vb: AddRow(IEnumerable(Of String))
- uid: wan24.Data.CsvTable.Validate
  commentId: M:wan24.Data.CsvTable.Validate
  id: Validate
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: CsvTable.Validate()
  fullName: wan24.Data.CsvTable.Validate()
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Common.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: Validate
    path: ../CSV-Parser/CsvTable.Common.cs
    startLine: 212
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Validate the table and all rows (will throw an exception on error)
  example: []
  syntax:
    content: public CsvTable Validate()
    return:
      type: wan24.Data.CsvTable
      description: This
    content.vb: Public Function Validate() As CsvTable
  overload: wan24.Data.CsvTable.Validate*
- uid: wan24.Data.CsvTable.Clear(System.Boolean)
  commentId: M:wan24.Data.CsvTable.Clear(System.Boolean)
  id: Clear(System.Boolean)
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: Clear(bool)
  nameWithType: CsvTable.Clear(bool)
  fullName: wan24.Data.CsvTable.Clear(bool)
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Common.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: Clear
    path: ../CSV-Parser/CsvTable.Common.cs
    startLine: 233
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Clear the data
  example: []
  syntax:
    content: public CsvTable Clear(bool includingHeader = true)
    parameters:
    - id: includingHeader
      type: System.Boolean
      description: Including column headers?
    return:
      type: wan24.Data.CsvTable
      description: This
    content.vb: Public Function Clear(includingHeader As Boolean = True) As CsvTable
  overload: wan24.Data.CsvTable.Clear*
  nameWithType.vb: CsvTable.Clear(Boolean)
  fullName.vb: wan24.Data.CsvTable.Clear(Boolean)
  name.vb: Clear(Boolean)
- uid: wan24.Data.CsvTable.#ctor(System.Nullable{System.Boolean},System.Char,System.Nullable{System.Char},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  commentId: M:wan24.Data.CsvTable.#ctor(System.Nullable{System.Boolean},System.Char,System.Nullable{System.Char},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})
  id: '#ctor(System.Nullable{System.Boolean},System.Char,System.Nullable{System.Char},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}})'
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: CsvTable(bool?, char, char?, IEnumerable<string>, IEnumerable<IEnumerable<string>>)
  nameWithType: CsvTable.CsvTable(bool?, char, char?, IEnumerable<string>, IEnumerable<IEnumerable<string>>)
  fullName: wan24.Data.CsvTable.CsvTable(bool?, char, char?, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<string>>)
  type: Constructor
  source:
    remote:
      path: src/CSV-Parser/CsvTable.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: .ctor
    path: ../CSV-Parser/CsvTable.cs
    startLine: 21
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Constructor
  example: []
  syntax:
    content: public CsvTable(bool? hasHeader = null, char fieldDelimiter = ',', char? stringDelimiter = '"', IEnumerable<string> header = null, IEnumerable<IEnumerable<string>> rows = null)
    parameters:
    - id: hasHeader
      type: System.Nullable{System.Boolean}
      description: Has a header row?
    - id: fieldDelimiter
      type: System.Char
      description: Field delimiter
    - id: stringDelimiter
      type: System.Nullable{System.Char}
      description: String delimiter
    - id: header
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Column headers
    - id: rows
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}}
      description: Rows (references will be used, if possible)
    content.vb: Public Sub New(hasHeader As Boolean? = Nothing, fieldDelimiter As Char = ","c, stringDelimiter As Char? = """c, header As IEnumerable(Of String) = Nothing, rows As IEnumerable(Of IEnumerable(Of String)) = Nothing)
  overload: wan24.Data.CsvTable.#ctor*
  nameWithType.vb: CsvTable.New(Boolean?, Char, Char?, IEnumerable(Of String), IEnumerable(Of IEnumerable(Of String)))
  fullName.vb: wan24.Data.CsvTable.New(Boolean?, Char, Char?, System.Collections.Generic.IEnumerable(Of String), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of String)))
  name.vb: New(Boolean?, Char, Char?, IEnumerable(Of String), IEnumerable(Of IEnumerable(Of String)))
- uid: wan24.Data.CsvTable.Item(System.Int32)
  commentId: P:wan24.Data.CsvTable.Item(System.Int32)
  id: Item(System.Int32)
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: CsvTable.this[int]
  fullName: wan24.Data.CsvTable.this[int]
  type: Property
  source:
    remote:
      path: src/CSV-Parser/CsvTable.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: this[]
    path: ../CSV-Parser/CsvTable.cs
    startLine: 43
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Get a row
  example: []
  syntax:
    content: public string[] this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: Index
    return:
      type: System.String[]
      description: Row
    content.vb: Public ReadOnly Default Property this[](index As Integer) As String()
  overload: wan24.Data.CsvTable.Item*
  nameWithType.vb: CsvTable.this[](Integer)
  fullName.vb: wan24.Data.CsvTable.this[](Integer)
  name.vb: this[](Integer)
- uid: wan24.Data.CsvTable.Item(System.Int32,System.String)
  commentId: P:wan24.Data.CsvTable.Item(System.Int32,System.String)
  id: Item(System.Int32,System.String)
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: this[int, string]
  nameWithType: CsvTable.this[int, string]
  fullName: wan24.Data.CsvTable.this[int, string]
  type: Property
  source:
    remote:
      path: src/CSV-Parser/CsvTable.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: this[]
    path: ../CSV-Parser/CsvTable.cs
    startLine: 54
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Get a field ow a row
  example: []
  syntax:
    content: public string this[int index, string header] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: Row index
    - id: header
      type: System.String
      description: Field header name
    return:
      type: System.String
      description: Field value
    content.vb: Public ReadOnly Default Property this[](index As Integer, header As String) As String
  overload: wan24.Data.CsvTable.Item*
  nameWithType.vb: CsvTable.this[](Integer, String)
  fullName.vb: wan24.Data.CsvTable.this[](Integer, String)
  name.vb: this[](Integer, String)
- uid: wan24.Data.CsvTable.HasHeader
  commentId: P:wan24.Data.CsvTable.HasHeader
  id: HasHeader
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: HasHeader
  nameWithType: CsvTable.HasHeader
  fullName: wan24.Data.CsvTable.HasHeader
  type: Property
  source:
    remote:
      path: src/CSV-Parser/CsvTable.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: HasHeader
    path: ../CSV-Parser/CsvTable.cs
    startLine: 69
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Has a header row?
  example: []
  syntax:
    content: public bool HasHeader { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasHeader As Boolean
  overload: wan24.Data.CsvTable.HasHeader*
- uid: wan24.Data.CsvTable.FieldDelimiter
  commentId: P:wan24.Data.CsvTable.FieldDelimiter
  id: FieldDelimiter
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: FieldDelimiter
  nameWithType: CsvTable.FieldDelimiter
  fullName: wan24.Data.CsvTable.FieldDelimiter
  type: Property
  source:
    remote:
      path: src/CSV-Parser/CsvTable.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: FieldDelimiter
    path: ../CSV-Parser/CsvTable.cs
    startLine: 74
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Field delimiter
  example: []
  syntax:
    content: public char FieldDelimiter { get; }
    parameters: []
    return:
      type: System.Char
    content.vb: Public ReadOnly Property FieldDelimiter As Char
  overload: wan24.Data.CsvTable.FieldDelimiter*
- uid: wan24.Data.CsvTable.StringDelimiter
  commentId: P:wan24.Data.CsvTable.StringDelimiter
  id: StringDelimiter
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: StringDelimiter
  nameWithType: CsvTable.StringDelimiter
  fullName: wan24.Data.CsvTable.StringDelimiter
  type: Property
  source:
    remote:
      path: src/CSV-Parser/CsvTable.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: StringDelimiter
    path: ../CSV-Parser/CsvTable.cs
    startLine: 79
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: String delimiter
  example: []
  syntax:
    content: public char? StringDelimiter { get; }
    parameters: []
    return:
      type: System.Nullable{System.Char}
    content.vb: Public ReadOnly Property StringDelimiter As Char?
  overload: wan24.Data.CsvTable.StringDelimiter*
- uid: wan24.Data.CsvTable.CountColumns
  commentId: P:wan24.Data.CsvTable.CountColumns
  id: CountColumns
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: CountColumns
  nameWithType: CsvTable.CountColumns
  fullName: wan24.Data.CsvTable.CountColumns
  type: Property
  source:
    remote:
      path: src/CSV-Parser/CsvTable.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: CountColumns
    path: ../CSV-Parser/CsvTable.cs
    startLine: 84
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Column count
  example: []
  syntax:
    content: public int CountColumns { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CountColumns As Integer
  overload: wan24.Data.CsvTable.CountColumns*
- uid: wan24.Data.CsvTable.CountRows
  commentId: P:wan24.Data.CsvTable.CountRows
  id: CountRows
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: CountRows
  nameWithType: CsvTable.CountRows
  fullName: wan24.Data.CsvTable.CountRows
  type: Property
  source:
    remote:
      path: src/CSV-Parser/CsvTable.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: CountRows
    path: ../CSV-Parser/CsvTable.cs
    startLine: 89
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Row count
  example: []
  syntax:
    content: public int CountRows { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CountRows As Integer
  overload: wan24.Data.CsvTable.CountRows*
- uid: wan24.Data.CsvTable.Header
  commentId: P:wan24.Data.CsvTable.Header
  id: Header
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: Header
  nameWithType: CsvTable.Header
  fullName: wan24.Data.CsvTable.Header
  type: Property
  source:
    remote:
      path: src/CSV-Parser/CsvTable.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: Header
    path: ../CSV-Parser/CsvTable.cs
    startLine: 94
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Column headers
  example: []
  syntax:
    content: public List<string> Header { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property Header As List(Of String)
  overload: wan24.Data.CsvTable.Header*
- uid: wan24.Data.CsvTable.Rows
  commentId: P:wan24.Data.CsvTable.Rows
  id: Rows
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: Rows
  nameWithType: CsvTable.Rows
  fullName: wan24.Data.CsvTable.Rows
  type: Property
  source:
    remote:
      path: src/CSV-Parser/CsvTable.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: Rows
    path: ../CSV-Parser/CsvTable.cs
    startLine: 99
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Rows
  example: []
  syntax:
    content: public List<string[]> Rows { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String[]}
    content.vb: Public Property Rows As List(Of String())
  overload: wan24.Data.CsvTable.Rows*
- uid: wan24.Data.CsvTable.GetEnumerator
  commentId: M:wan24.Data.CsvTable.GetEnumerator
  id: GetEnumerator
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: CsvTable.GetEnumerator()
  fullName: wan24.Data.CsvTable.GetEnumerator()
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: GetEnumerator
    path: ../CSV-Parser/CsvTable.cs
    startLine: 102
  assemblies:
  - csvparser
  namespace: wan24.Data
  example: []
  syntax:
    content: public IEnumerator<string[]> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.String[]}
    content.vb: Public Function GetEnumerator() As IEnumerator(Of String())
  overload: wan24.Data.CsvTable.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.String[]}.GetEnumerator
- uid: wan24.Data.CsvTable.Clone
  commentId: M:wan24.Data.CsvTable.Clone
  id: Clone
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: CsvTable.Clone()
  fullName: wan24.Data.CsvTable.Clone()
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: Clone
    path: ../CSV-Parser/CsvTable.cs
    startLine: 105
  assemblies:
  - csvparser
  namespace: wan24.Data
  example: []
  syntax:
    content: public object Clone()
    return:
      type: System.Object
    content.vb: Public Function Clone() As Object
  overload: wan24.Data.CsvTable.Clone*
  implements:
  - System.ICloneable.Clone
- uid: wan24.Data.CsvTable.ToString(System.Nullable{System.Boolean},System.Nullable{System.Char},System.Nullable{System.Char})
  commentId: M:wan24.Data.CsvTable.ToString(System.Nullable{System.Boolean},System.Nullable{System.Char},System.Nullable{System.Char})
  id: ToString(System.Nullable{System.Boolean},System.Nullable{System.Char},System.Nullable{System.Char})
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: ToString(bool?, char?, char?)
  nameWithType: CsvTable.ToString(bool?, char?, char?)
  fullName: wan24.Data.CsvTable.ToString(bool?, char?, char?)
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: ToString
    path: ../CSV-Parser/CsvTable.cs
    startLine: 119
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Get the CSV table data as string
  example: []
  syntax:
    content: public string ToString(bool? header = null, char? fieldDelimiter = null, char? stringDelimiter = null)
    parameters:
    - id: header
      type: System.Nullable{System.Boolean}
      description: If to add the column headers as first row (if <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, and <code>stringDelimiter</code> is also <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, <code>stringDelimiter</code> will be set from <code>StringDelimiter</code>
    - id: fieldDelimiter
      type: System.Nullable{System.Char}
      description: Field delimiter
    - id: stringDelimiter
      type: System.Nullable{System.Char}
      description: String delimiter
    return:
      type: System.String
      description: CSV table data as string
    content.vb: Public Function ToString(header As Boolean? = Nothing, fieldDelimiter As Char? = Nothing, stringDelimiter As Char? = Nothing) As String
  overload: wan24.Data.CsvTable.ToString*
  nameWithType.vb: CsvTable.ToString(Boolean?, Char?, Char?)
  fullName.vb: wan24.Data.CsvTable.ToString(Boolean?, Char?, Char?)
  name.vb: ToString(Boolean?, Char?, Char?)
- uid: wan24.Data.CsvTable.AsDictionaries
  commentId: P:wan24.Data.CsvTable.AsDictionaries
  id: AsDictionaries
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: AsDictionaries
  nameWithType: CsvTable.AsDictionaries
  fullName: wan24.Data.CsvTable.AsDictionaries
  type: Property
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Dictionary.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: AsDictionaries
    path: ../CSV-Parser/CsvTable.Dictionary.cs
    startLine: 12
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Rows as dictionaries
  example: []
  syntax:
    content: public IEnumerable<Dictionary<string, string>> AsDictionaries { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.Dictionary{System.String,System.String}}
    content.vb: Public ReadOnly Property AsDictionaries As IEnumerable(Of Dictionary(Of String, String))
  overload: wan24.Data.CsvTable.AsDictionaries*
- uid: wan24.Data.CsvTable.AsDictionary(System.Int32)
  commentId: M:wan24.Data.CsvTable.AsDictionary(System.Int32)
  id: AsDictionary(System.Int32)
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: AsDictionary(int)
  nameWithType: CsvTable.AsDictionary(int)
  fullName: wan24.Data.CsvTable.AsDictionary(int)
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Dictionary.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: AsDictionary
    path: ../CSV-Parser/CsvTable.Dictionary.cs
    startLine: 19
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Get a row as dictionary
  example: []
  syntax:
    content: public Dictionary<string, string> AsDictionary(int index)
    parameters:
    - id: index
      type: System.Int32
      description: Index
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Dictionary
    content.vb: Public Function AsDictionary(index As Integer) As Dictionary(Of String, String)
  overload: wan24.Data.CsvTable.AsDictionary*
  nameWithType.vb: CsvTable.AsDictionary(Integer)
  fullName.vb: wan24.Data.CsvTable.AsDictionary(Integer)
  name.vb: AsDictionary(Integer)
- uid: wan24.Data.CsvTable.Mapping
  commentId: P:wan24.Data.CsvTable.Mapping
  id: Mapping
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: Mapping
  nameWithType: CsvTable.Mapping
  fullName: wan24.Data.CsvTable.Mapping
  type: Property
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Map.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: Mapping
    path: ../CSV-Parser/CsvTable.Map.cs
    startLine: 12
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Row &lt;-&gt; object mapping
  example: []
  syntax:
    content: public Dictionary<int, CsvMapping> Mapping { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping}
    content.vb: Public Property Mapping As Dictionary(Of Integer, CsvMapping)
  overload: wan24.Data.CsvTable.Mapping*
- uid: wan24.Data.CsvTable.Objects
  commentId: P:wan24.Data.CsvTable.Objects
  id: Objects
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: Objects
  nameWithType: CsvTable.Objects
  fullName: wan24.Data.CsvTable.Objects
  type: Property
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Map.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: Objects
    path: ../CSV-Parser/CsvTable.Map.cs
    startLine: 17
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Enumerate trough objects
  example: []
  syntax:
    content: public IEnumerable<object> Objects { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
    content.vb: Public ReadOnly Property Objects As IEnumerable(Of Object)
  overload: wan24.Data.CsvTable.Objects*
- uid: wan24.Data.CsvTable.AsObject``1(System.Int32,System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping})
  commentId: M:wan24.Data.CsvTable.AsObject``1(System.Int32,System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping})
  id: AsObject``1(System.Int32,System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping})
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: AsObject<T>(int, Dictionary<int, CsvMapping>)
  nameWithType: CsvTable.AsObject<T>(int, Dictionary<int, CsvMapping>)
  fullName: wan24.Data.CsvTable.AsObject<T>(int, System.Collections.Generic.Dictionary<int, wan24.Data.CsvMapping>)
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Map.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: AsObject
    path: ../CSV-Parser/CsvTable.Map.cs
    startLine: 32
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Get a row as object
  example: []
  syntax:
    content: 'public T AsObject<T>(int index, Dictionary<int, CsvMapping> mapping = null) where T : new()'
    parameters:
    - id: index
      type: System.Int32
      description: Index
    - id: mapping
      type: System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping}
      description: Override mapping
    typeParameters:
    - id: T
      description: Object type
    return:
      type: '{T}'
      description: Object
    content.vb: Public Function AsObject(Of T As New)(index As Integer, mapping As Dictionary(Of Integer, CsvMapping) = Nothing) As T
  overload: wan24.Data.CsvTable.AsObject*
  nameWithType.vb: CsvTable.AsObject(Of T)(Integer, Dictionary(Of Integer, CsvMapping))
  fullName.vb: wan24.Data.CsvTable.AsObject(Of T)(Integer, System.Collections.Generic.Dictionary(Of Integer, wan24.Data.CsvMapping))
  name.vb: AsObject(Of T)(Integer, Dictionary(Of Integer, CsvMapping))
- uid: wan24.Data.CsvTable.AsObjects``1(System.Int32,System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping})
  commentId: M:wan24.Data.CsvTable.AsObjects``1(System.Int32,System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping})
  id: AsObjects``1(System.Int32,System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping})
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: AsObjects<T>(int, Dictionary<int, CsvMapping>)
  nameWithType: CsvTable.AsObjects<T>(int, Dictionary<int, CsvMapping>)
  fullName: wan24.Data.CsvTable.AsObjects<T>(int, System.Collections.Generic.Dictionary<int, wan24.Data.CsvMapping>)
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Map.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: AsObjects
    path: ../CSV-Parser/CsvTable.Map.cs
    startLine: 45
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Get rows as object
  example: []
  syntax:
    content: 'public IEnumerable<T> AsObjects<T>(int index, Dictionary<int, CsvMapping> mapping = null) where T : new()'
    parameters:
    - id: index
      type: System.Int32
      description: Index
    - id: mapping
      type: System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping}
      description: Override mapping
    typeParameters:
    - id: T
      description: Object type
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Object
    content.vb: Public Function AsObjects(Of T As New)(index As Integer, mapping As Dictionary(Of Integer, CsvMapping) = Nothing) As IEnumerable(Of T)
  overload: wan24.Data.CsvTable.AsObjects*
  nameWithType.vb: CsvTable.AsObjects(Of T)(Integer, Dictionary(Of Integer, CsvMapping))
  fullName.vb: wan24.Data.CsvTable.AsObjects(Of T)(Integer, System.Collections.Generic.Dictionary(Of Integer, wan24.Data.CsvMapping))
  name.vb: AsObjects(Of T)(Integer, Dictionary(Of Integer, CsvMapping))
- uid: wan24.Data.CsvTable.AsObject``1(System.Int32,``0,System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping})
  commentId: M:wan24.Data.CsvTable.AsObject``1(System.Int32,``0,System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping})
  id: AsObject``1(System.Int32,``0,System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping})
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: AsObject<T>(int, T, Dictionary<int, CsvMapping>)
  nameWithType: CsvTable.AsObject<T>(int, T, Dictionary<int, CsvMapping>)
  fullName: wan24.Data.CsvTable.AsObject<T>(int, T, System.Collections.Generic.Dictionary<int, wan24.Data.CsvMapping>)
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Map.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: AsObject
    path: ../CSV-Parser/CsvTable.Map.cs
    startLine: 59
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Get a row as object
  example: []
  syntax:
    content: public T AsObject<T>(int index, T obj, Dictionary<int, CsvMapping> mapping = null)
    parameters:
    - id: index
      type: System.Int32
      description: Index
    - id: obj
      type: '{T}'
      description: Object
    - id: mapping
      type: System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping}
      description: Override mapping
    typeParameters:
    - id: T
      description: Object type
    return:
      type: '{T}'
      description: Object
    content.vb: Public Function AsObject(Of T)(index As Integer, obj As T, mapping As Dictionary(Of Integer, CsvMapping) = Nothing) As T
  overload: wan24.Data.CsvTable.AsObject*
  nameWithType.vb: CsvTable.AsObject(Of T)(Integer, T, Dictionary(Of Integer, CsvMapping))
  fullName.vb: wan24.Data.CsvTable.AsObject(Of T)(Integer, T, System.Collections.Generic.Dictionary(Of Integer, wan24.Data.CsvMapping))
  name.vb: AsObject(Of T)(Integer, T, Dictionary(Of Integer, CsvMapping))
- uid: wan24.Data.CsvTable.AsObject(System.Int32)
  commentId: M:wan24.Data.CsvTable.AsObject(System.Int32)
  id: AsObject(System.Int32)
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: AsObject(int)
  nameWithType: CsvTable.AsObject(int)
  fullName: wan24.Data.CsvTable.AsObject(int)
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Map.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: AsObject
    path: ../CSV-Parser/CsvTable.Map.cs
    startLine: 71
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Get an object from an object row (having the object type in the first field)
  example: []
  syntax:
    content: public object AsObject(int index)
    parameters:
    - id: index
      type: System.Int32
      description: Index
    return:
      type: System.Object
      description: Object or <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>
    content.vb: Public Function AsObject(index As Integer) As Object
  overload: wan24.Data.CsvTable.AsObject*
  nameWithType.vb: CsvTable.AsObject(Integer)
  fullName.vb: wan24.Data.CsvTable.AsObject(Integer)
  name.vb: AsObject(Integer)
- uid: wan24.Data.CsvTable.AddObjects``1(``0[])
  commentId: M:wan24.Data.CsvTable.AddObjects``1(``0[])
  id: AddObjects``1(``0[])
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: AddObjects<T>(params T[])
  nameWithType: CsvTable.AddObjects<T>(params T[])
  fullName: wan24.Data.CsvTable.AddObjects<T>(params T[])
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Map.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: AddObjects
    path: ../CSV-Parser/CsvTable.Map.cs
    startLine: 79
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Add rows from objects
  example: []
  syntax:
    content: public CsvTable AddObjects<T>(params T[] objs)
    parameters:
    - id: objs
      type: '{T}[]'
      description: Objects
    typeParameters:
    - id: T
      description: Object type
    return:
      type: wan24.Data.CsvTable
      description: This
    content.vb: Public Function AddObjects(Of T)(ParamArray objs As T()) As CsvTable
  overload: wan24.Data.CsvTable.AddObjects*
  nameWithType.vb: CsvTable.AddObjects(Of T)(ParamArray T())
  fullName.vb: wan24.Data.CsvTable.AddObjects(Of T)(ParamArray T())
  name.vb: AddObjects(Of T)(ParamArray T())
- uid: wan24.Data.CsvTable.AddObjects``1(System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping},``0[])
  commentId: M:wan24.Data.CsvTable.AddObjects``1(System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping},``0[])
  id: AddObjects``1(System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping},``0[])
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: AddObjects<T>(Dictionary<int, CsvMapping>, params T[])
  nameWithType: CsvTable.AddObjects<T>(Dictionary<int, CsvMapping>, params T[])
  fullName: wan24.Data.CsvTable.AddObjects<T>(System.Collections.Generic.Dictionary<int, wan24.Data.CsvMapping>, params T[])
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Map.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: AddObjects
    path: ../CSV-Parser/CsvTable.Map.cs
    startLine: 93
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Add rows from objects
  example: []
  syntax:
    content: public CsvTable AddObjects<T>(Dictionary<int, CsvMapping> mapping, params T[] objs)
    parameters:
    - id: mapping
      type: System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping}
      description: Override mapping
    - id: objs
      type: '{T}[]'
      description: Objects
    typeParameters:
    - id: T
      description: Object type
    return:
      type: wan24.Data.CsvTable
      description: This
    content.vb: Public Function AddObjects(Of T)(mapping As Dictionary(Of Integer, CsvMapping), ParamArray objs As T()) As CsvTable
  overload: wan24.Data.CsvTable.AddObjects*
  nameWithType.vb: CsvTable.AddObjects(Of T)(Dictionary(Of Integer, CsvMapping), ParamArray T())
  fullName.vb: wan24.Data.CsvTable.AddObjects(Of T)(System.Collections.Generic.Dictionary(Of Integer, wan24.Data.CsvMapping), ParamArray T())
  name.vb: AddObjects(Of T)(Dictionary(Of Integer, CsvMapping), ParamArray T())
- uid: wan24.Data.CsvTable.AddObjects(System.Object[])
  commentId: M:wan24.Data.CsvTable.AddObjects(System.Object[])
  id: AddObjects(System.Object[])
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: AddObjects(params object[])
  nameWithType: CsvTable.AddObjects(params object[])
  fullName: wan24.Data.CsvTable.AddObjects(params object[])
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Map.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: AddObjects
    path: ../CSV-Parser/CsvTable.Map.cs
    startLine: 105
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Add rows from objects with the type names in the first field
  example: []
  syntax:
    content: public CsvTable AddObjects(params object[] objs)
    parameters:
    - id: objs
      type: System.Object[]
      description: Objects
    return:
      type: wan24.Data.CsvTable
      description: This
    content.vb: Public Function AddObjects(ParamArray objs As Object()) As CsvTable
  overload: wan24.Data.CsvTable.AddObjects*
  nameWithType.vb: CsvTable.AddObjects(ParamArray Object())
  fullName.vb: wan24.Data.CsvTable.AddObjects(ParamArray Object())
  name.vb: AddObjects(ParamArray Object())
- uid: wan24.Data.CsvTable.CreateMapping
  commentId: M:wan24.Data.CsvTable.CreateMapping
  id: CreateMapping
  parent: wan24.Data.CsvTable
  langs:
  - csharp
  - vb
  name: CreateMapping()
  nameWithType: CsvTable.CreateMapping()
  fullName: wan24.Data.CsvTable.CreateMapping()
  type: Method
  source:
    remote:
      path: src/CSV-Parser/CsvTable.Map.cs
      branch: main
      repo: https://github.com/nd1012/CSV-Parser
    id: CreateMapping
    path: ../CSV-Parser/CsvTable.Map.cs
    startLine: 116
  assemblies:
  - csvparser
  namespace: wan24.Data
  summary: Create a mapping from the column headers (supports string properties only, will set the <code>Mapping</code> property)
  example: []
  syntax:
    content: public CsvTable CreateMapping()
    return:
      type: wan24.Data.CsvTable
      description: This
    content.vb: Public Function CreateMapping() As CsvTable
  overload: wan24.Data.CsvTable.CreateMapping*
references:
- uid: wan24.Data
  commentId: N:wan24.Data
  href: wan24.html
  name: wan24.Data
  nameWithType: wan24.Data
  fullName: wan24.Data
  spec.csharp:
  - uid: wan24
    name: wan24
    href: wan24.html
  - name: .
  - uid: wan24.Data
    name: Data
    href: wan24.Data.html
  spec.vb:
  - uid: wan24
    name: wan24
    href: wan24.html
  - name: .
  - uid: wan24.Data
    name: Data
    href: wan24.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.IEnumerable{System.String[]}
  commentId: T:System.Collections.Generic.IEnumerable{System.String[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string[]>
  nameWithType: IEnumerable<string[]>
  fullName: System.Collections.Generic.IEnumerable<string[]>
  nameWithType.vb: IEnumerable(Of String())
  fullName.vb: System.Collections.Generic.IEnumerable(Of String())
  name.vb: IEnumerable(Of String())
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: wan24.Data.CsvTable.CreateHeaders*
  commentId: Overload:wan24.Data.CsvTable.CreateHeaders
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_CreateHeaders
  name: CreateHeaders
  nameWithType: CsvTable.CreateHeaders
  fullName: wan24.Data.CsvTable.CreateHeaders
- uid: wan24.Data.CsvTable
  commentId: T:wan24.Data.CsvTable
  parent: wan24.Data
  href: wan24.Data.CsvTable.html
  name: CsvTable
  nameWithType: CsvTable
  fullName: wan24.Data.CsvTable
- uid: wan24.Data.CsvTable.AddColumn*
  commentId: Overload:wan24.Data.CsvTable.AddColumn
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_AddColumn_System_String_System_Int32_System_Func_System_Int32_System_String__
  name: AddColumn
  nameWithType: CsvTable.AddColumn
  fullName: wan24.Data.CsvTable.AddColumn
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Func{System.Int32,System.String}
  commentId: T:System.Func{System.Int32,System.String}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<int, string>
  nameWithType: Func<int, string>
  fullName: System.Func<int, string>
  nameWithType.vb: Func(Of Integer, String)
  fullName.vb: System.Func(Of Integer, String)
  name.vb: Func(Of Integer, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: wan24.Data.CsvTable.RemoveColumn*
  commentId: Overload:wan24.Data.CsvTable.RemoveColumn
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_RemoveColumn_System_Int32_
  name: RemoveColumn
  nameWithType: CsvTable.RemoveColumn
  fullName: wan24.Data.CsvTable.RemoveColumn
- uid: wan24.Data.CsvTable.MoveColumn*
  commentId: Overload:wan24.Data.CsvTable.MoveColumn
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_MoveColumn_System_Int32_System_Int32_System_Boolean_
  name: MoveColumn
  nameWithType: CsvTable.MoveColumn
  fullName: wan24.Data.CsvTable.MoveColumn
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: wan24.Data.CsvTable.SwapColumn*
  commentId: Overload:wan24.Data.CsvTable.SwapColumn
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_SwapColumn_System_Int32_System_Int32_System_Boolean_
  name: SwapColumn
  nameWithType: CsvTable.SwapColumn
  fullName: wan24.Data.CsvTable.SwapColumn
- uid: wan24.Data.CsvTable.ReorderColumns*
  commentId: Overload:wan24.Data.CsvTable.ReorderColumns
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_ReorderColumns_System_Int32___System_Boolean_
  name: ReorderColumns
  nameWithType: CsvTable.ReorderColumns
  fullName: wan24.Data.CsvTable.ReorderColumns
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: wan24.Data.CsvTable.AddRow*
  commentId: Overload:wan24.Data.CsvTable.AddRow
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_AddRow_System_Collections_Generic_IEnumerable_System_String__
  name: AddRow
  nameWithType: CsvTable.AddRow
  fullName: wan24.Data.CsvTable.AddRow
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: wan24.Data.CsvTable.Validate*
  commentId: Overload:wan24.Data.CsvTable.Validate
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_Validate
  name: Validate
  nameWithType: CsvTable.Validate
  fullName: wan24.Data.CsvTable.Validate
- uid: wan24.Data.CsvTable.Clear*
  commentId: Overload:wan24.Data.CsvTable.Clear
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_Clear_System_Boolean_
  name: Clear
  nameWithType: CsvTable.Clear
  fullName: wan24.Data.CsvTable.Clear
- uid: wan24.Data.CsvTable.#ctor*
  commentId: Overload:wan24.Data.CsvTable.#ctor
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable__ctor_System_Nullable_System_Boolean__System_Char_System_Nullable_System_Char__System_Collections_Generic_IEnumerable_System_String__System_Collections_Generic_IEnumerable_System_Collections_Generic_IEnumerable_System_String___
  name: CsvTable
  nameWithType: CsvTable.CsvTable
  fullName: wan24.Data.CsvTable.CsvTable
  nameWithType.vb: CsvTable.New
  fullName.vb: wan24.Data.CsvTable.New
  name.vb: New
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: System.Nullable{System.Char}
  commentId: T:System.Nullable{System.Char}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char?
  nameWithType: char?
  fullName: char?
  nameWithType.vb: Char?
  fullName.vb: Char?
  name.vb: Char?
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '?'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '?'
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IEnumerable<string>>
  nameWithType: IEnumerable<IEnumerable<string>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<string>>
  nameWithType.vb: IEnumerable(Of IEnumerable(Of String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of String))
  name.vb: IEnumerable(Of IEnumerable(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: wan24.Data.CsvTable.Item*
  commentId: Overload:wan24.Data.CsvTable.Item
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_Item_System_Int32_
  name: this
  nameWithType: CsvTable.this
  fullName: wan24.Data.CsvTable.this
  nameWithType.vb: CsvTable.this[]
  fullName.vb: wan24.Data.CsvTable.this[]
  name.vb: this[]
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: wan24.Data.CsvTable.HasHeader*
  commentId: Overload:wan24.Data.CsvTable.HasHeader
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_HasHeader
  name: HasHeader
  nameWithType: CsvTable.HasHeader
  fullName: wan24.Data.CsvTable.HasHeader
- uid: wan24.Data.CsvTable.FieldDelimiter*
  commentId: Overload:wan24.Data.CsvTable.FieldDelimiter
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_FieldDelimiter
  name: FieldDelimiter
  nameWithType: CsvTable.FieldDelimiter
  fullName: wan24.Data.CsvTable.FieldDelimiter
- uid: wan24.Data.CsvTable.StringDelimiter*
  commentId: Overload:wan24.Data.CsvTable.StringDelimiter
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_StringDelimiter
  name: StringDelimiter
  nameWithType: CsvTable.StringDelimiter
  fullName: wan24.Data.CsvTable.StringDelimiter
- uid: wan24.Data.CsvTable.CountColumns*
  commentId: Overload:wan24.Data.CsvTable.CountColumns
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_CountColumns
  name: CountColumns
  nameWithType: CsvTable.CountColumns
  fullName: wan24.Data.CsvTable.CountColumns
- uid: wan24.Data.CsvTable.CountRows*
  commentId: Overload:wan24.Data.CsvTable.CountRows
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_CountRows
  name: CountRows
  nameWithType: CsvTable.CountRows
  fullName: wan24.Data.CsvTable.CountRows
- uid: wan24.Data.CsvTable.Header*
  commentId: Overload:wan24.Data.CsvTable.Header
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_Header
  name: Header
  nameWithType: CsvTable.Header
  fullName: wan24.Data.CsvTable.Header
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: wan24.Data.CsvTable.Rows*
  commentId: Overload:wan24.Data.CsvTable.Rows
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_Rows
  name: Rows
  nameWithType: CsvTable.Rows
  fullName: wan24.Data.CsvTable.Rows
- uid: System.Collections.Generic.List{System.String[]}
  commentId: T:System.Collections.Generic.List{System.String[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string[]>
  nameWithType: List<string[]>
  fullName: System.Collections.Generic.List<string[]>
  nameWithType.vb: List(Of String())
  fullName.vb: System.Collections.Generic.List(Of String())
  name.vb: List(Of String())
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: wan24.Data.CsvTable.GetEnumerator*
  commentId: Overload:wan24.Data.CsvTable.GetEnumerator
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_GetEnumerator
  name: GetEnumerator
  nameWithType: CsvTable.GetEnumerator
  fullName: wan24.Data.CsvTable.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.String[]}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.String[]}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.String[]}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<string[]>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<string[]>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of String()).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of String()).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{System.String[]}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{System.String[]}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{System.String[]}
  commentId: T:System.Collections.Generic.IEnumerator{System.String[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<string[]>
  nameWithType: IEnumerator<string[]>
  fullName: System.Collections.Generic.IEnumerator<string[]>
  nameWithType.vb: IEnumerator(Of String())
  fullName.vb: System.Collections.Generic.IEnumerator(Of String())
  name.vb: IEnumerator(Of String())
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: wan24.Data.CsvTable.Clone*
  commentId: Overload:wan24.Data.CsvTable.Clone
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_Clone
  name: Clone
  nameWithType: CsvTable.Clone
  fullName: wan24.Data.CsvTable.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
- uid: wan24.Data.CsvTable.ToString*
  commentId: Overload:wan24.Data.CsvTable.ToString
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_ToString_System_Nullable_System_Boolean__System_Nullable_System_Char__System_Nullable_System_Char__
  name: ToString
  nameWithType: CsvTable.ToString
  fullName: wan24.Data.CsvTable.ToString
- uid: wan24.Data.CsvTable.AsDictionaries*
  commentId: Overload:wan24.Data.CsvTable.AsDictionaries
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_AsDictionaries
  name: AsDictionaries
  nameWithType: CsvTable.AsDictionaries
  fullName: wan24.Data.CsvTable.AsDictionaries
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.Dictionary{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.Dictionary{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Dictionary<string, string>>
  nameWithType: IEnumerable<Dictionary<string, string>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.Dictionary<string, string>>
  nameWithType.vb: IEnumerable(Of Dictionary(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.Dictionary(Of String, String))
  name.vb: IEnumerable(Of Dictionary(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: wan24.Data.CsvTable.AsDictionary*
  commentId: Overload:wan24.Data.CsvTable.AsDictionary
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_AsDictionary_System_Int32_
  name: AsDictionary
  nameWithType: CsvTable.AsDictionary
  fullName: wan24.Data.CsvTable.AsDictionary
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: wan24.Data.CsvTable.Mapping*
  commentId: Overload:wan24.Data.CsvTable.Mapping
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_Mapping
  name: Mapping
  nameWithType: CsvTable.Mapping
  fullName: wan24.Data.CsvTable.Mapping
- uid: System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,wan24.Data.CsvMapping}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<int, CsvMapping>
  nameWithType: Dictionary<int, CsvMapping>
  fullName: System.Collections.Generic.Dictionary<int, wan24.Data.CsvMapping>
  nameWithType.vb: Dictionary(Of Integer, CsvMapping)
  fullName.vb: System.Collections.Generic.Dictionary(Of Integer, wan24.Data.CsvMapping)
  name.vb: Dictionary(Of Integer, CsvMapping)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: wan24.Data.CsvMapping
    name: CsvMapping
    href: wan24.Data.CsvMapping.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: wan24.Data.CsvMapping
    name: CsvMapping
    href: wan24.Data.CsvMapping.html
  - name: )
- uid: wan24.Data.CsvTable.Objects*
  commentId: Overload:wan24.Data.CsvTable.Objects
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_Objects
  name: Objects
  nameWithType: CsvTable.Objects
  fullName: wan24.Data.CsvTable.Objects
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<object>
  nameWithType: IEnumerable<object>
  fullName: System.Collections.Generic.IEnumerable<object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: wan24.Data.CsvTable.AsObject*
  commentId: Overload:wan24.Data.CsvTable.AsObject
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_AsObject__1_System_Int32_System_Collections_Generic_Dictionary_System_Int32_wan24_Data_CsvMapping__
  name: AsObject
  nameWithType: CsvTable.AsObject
  fullName: wan24.Data.CsvTable.AsObject
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: wan24.Data.CsvTable.AsObjects*
  commentId: Overload:wan24.Data.CsvTable.AsObjects
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_AsObjects__1_System_Int32_System_Collections_Generic_Dictionary_System_Int32_wan24_Data_CsvMapping__
  name: AsObjects
  nameWithType: CsvTable.AsObjects
  fullName: wan24.Data.CsvTable.AsObjects
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: wan24.Data.CsvTable.AddObjects*
  commentId: Overload:wan24.Data.CsvTable.AddObjects
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_AddObjects__1___0___
  name: AddObjects
  nameWithType: CsvTable.AddObjects
  fullName: wan24.Data.CsvTable.AddObjects
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: wan24.Data.CsvTable.CreateMapping*
  commentId: Overload:wan24.Data.CsvTable.CreateMapping
  href: wan24.Data.CsvTable.html#wan24_Data_CsvTable_CreateMapping
  name: CreateMapping
  nameWithType: CsvTable.CreateMapping
  fullName: wan24.Data.CsvTable.CreateMapping
